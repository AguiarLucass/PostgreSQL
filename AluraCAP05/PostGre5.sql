-- Eventos no banco
-- Trigger Procedures

-- RECRIANDO A FUNÇÃO USANDO TRIGGER
DROP FUNCTION CRIA_INSTUTOR;
CREATE OR REPLACE FUNCTION CRIA_INSTUTOR() RETURNS TRIGGER AS $$
	DECLARE
	MEDIA DECIMAL;
	INSTRUTOR_MENOS INTEGER DEFAULT 0;
	TOTAL_INSTRUTOR INTEGER DEFAULT 0;
	SALARIO DECIMAL;
	PERCENTUAL DECIMAL; 
	BEGIN
		
		
		SELECT AVG(INSTRUTOR.SALARIO) INTO MEDIA FROM INSTRUTOR WHERE ID <> NEW.ID;
		IF SALARIO_INSTRUTOR > MEDIA THEN
			INSERT INTO LOG_INSTRUTORES(INFORMACAO) VALUES (NOME || 'RECEBE ACIMA DA MÉDIA');
			RETURN NULL;
		END IF;
		
		FOR SALARIO IN SELECT INSTRUTOR.SALARIO FROM INSTRUTOR WHERE ID <> NEW.ID LOOP
			TOTAL_INSTRUTOR := TOTAL_INSTRUTOR + 1;
			
			IF NEW.SALARIO > SALARIO THEN
				INSTRUTOR_MENOS := INSTRUTOR_MENOS + 1;
			END IF;
		END LOOP;
		
		PERCENTUAL = INSTRUTOR_MENOS::DECIMAL / TOTAL_INSTRUTOR::DECIMAL * 100;
		
		INSERT INTO LOG_INSTRUTORES(INFORMACAO) VALUES (NEW.NOME || 'RECEBE MAIS DO QUE ' || PERCENTUAL || '% DA GRADE DE INSTRUTORES');
	END;
$$ LANGUAGE PLPGSQL;


-- Abrindo cursores

CREATE FUNCTION INSTRUTORES_INTERNOS(ID_INSTRUTOR INTEGER) RETURNS REFCURSOR AS $$ 
	DECLARE 
		CURSOR_SALARIO REFCURSOR;
		BEGIN
		OPEN CURSOR_SALARIO 
				SELECT INSTRUTOR.SALARIO FROM INSTRUTOR 
				WHERE ID <> ID_INSTRUTOR AND SALARIO > 0; 
			FETCH LAST FROM CURSOR_SALARIO INTO SALARIO;
		RETURN CURSOR_SALARIO;
	END;
$$ LANGUAGE PLPGSQL;
