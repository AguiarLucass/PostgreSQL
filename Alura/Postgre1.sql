SELECT NOW(); -- SELECIONA A HORA ATUAL

-- CRIAÇÃO DA BASE DE DADOS
CREATE DATABASE ALURA;

SET ALURA

--CRIANDO UMA TABELA
CREATE TABLE ALUNO(
	ID SERIAL,
	NOME VARCHAR(255),
	CPF CHAR(11),
	OBSERVACAO TEXT,
	IDADE INTEGER,
	DINHEIRO NUMERIC(10,2),
	ALTURA REAL,
	ATIVO BOOLEAN,
	DATA_NASCIMENTO DATE,
	HORA_AULA TIME,
	MATRICULADO TIMESTAMP
);


--FAZENDO O SELECT DA TABELA
SELECT * FROM ALUNO;

--INSERINDO DADOS NA TABELA
INSERT INTO ALUNO (NOME,CPF,OBSERVACAO, IDADE, DINHEIRO, ALTURA, ATIVO, DATA_NASCIMENTO, HORA_AULA, MATRICULADO) 
VALUES 
('DIOGO','12345678901', 'APENAS UM TEXTO DE TESTE, PARA A FUNÇÃO',23, 100.50, 1.81, TRUE, '1998-02-27', '17:30:00', '2021-01-17 21:11:30');

--ATUALIZANDO UM REGISTRO
SELECT *
FROM ALUNO
WHERE ID = 1;

UPDATE ALUNO
SET NOME = 'LUCAS',
	CPF = '10111213141',
	OBSERVACAO = 'TESTE',
	IDADE = '22',
	DINHEIRO = 5000.50,
	ALTURA = 1.70,
	ATIVO = FALSE,
	DATA_NASCIMENTO = '1997-01-01',
	HORA_AULA = '21:00:00',
	MATRICULADO = '2021-01-17 21:00:00'
WHERE ID = 1;

-- Excluindo um registro

SELECT *
FROM ALUNO
WHERE ID = 1;

DELETE 
FROM ALUNO
WHERE ID = 1;

-- Selecionando colunas específicas

SELECT 	NOME  AS "Nome do aluno",
		IDADE,
		MATRICULADO AS Data_de_Matricula
FROM
ALUNO;

--FILTRANDO CAMPOS DO TIPO TEXTO
USE ALURA


-- Busca por nome exato
SELECT *
FROM ALUNO
WHERE NOME = 'Diego';

-- busca por nome diferente
SELECT * 
FROM ALUNO
WHERE NOME <> 'Diego';

SELECT * 
FROM ALUNO
WHERE NOME != 'Diego';

-- USANDO O LILE

-- Usando o '_abc' ele irá buscar tudo que tem 'abc' como exemplo, não importando a primeira letra
SELECT *
FROM ALUNO
WHERE NOME LIKE '_iego'

-- NOT LIKE

SELECT *
FROM ALUNO
WHERE NOME NOT LIKE '_iego'

--com percentual

SELECT *
FROM ALUNO 
WHERE NOME LIKE '%D';

INSERT INTO ALUNO (NOME) VALUES ('Vinicius Dias');
INSERT INTO ALUNO (NOME) VALUES ('Nico Steppat');
INSERT INTO ALUNO (NOME) VALUES ('João Roberto');
INSERT INTO ALUNO (NOME) VALUES ('Diego');

--FILTRANDO COM NULL 
SELECT *
FROM ALUNO
WHERE CPF IS NULL



--FILTRANDO POR BOOLEANO, NÚMERICO E DATA
SELECT *
FROM ALUNO
WHERE IDADE = 22

SELECT * 
FROM ALUNO
WHERE IDADE <>22

SELECT * 
FROM ALUNO
WHERE IDADE <100

--BETWEEN

SELECT *
FROM ALUNO
WHERE IDADE BETWEEN 10 AND 33

--BOOLEANO

SELECT *
FROM ALUNO
WHERE ATIVO = FALSE

SELECT *
FROM ALUNO
WHERE ATIVO IS NULL



-- DELETE CASCADE 

SELECT * FROM ALUNO;

SELECT * FROM CURSOS;

SELECT * FROM ALUNO_CURSO;


DROP TABLE ALUNO_CURSO;

CREATE TABLE ALUNO_CURSO(
	ALUNO_ID INTEGER,
	CURSO_ID INTEGER,
	PRIMARY KEY (ALUNO_ID, CURSO_ID),
	FOREIGN KEY (ALUNO_ID)
	REFERENCES ALUNO (ID)
	-- ON DELETE RESTRICT - PADRÃO DE CADASTRO DE UMA TABELA
	ON DELETE CASCADE,
	
	FOREIGN KEY (CURSO_ID)
	REFERENCES CURSOS (ID)
);

INSERT INTO ALUNO_CURSO(ALUNO_ID, CURSO_ID) VALUES (1,1);
INSERT INTO ALUNO_CURSO(ALUNO_ID, CURSO_ID) VALUES (2,1);
INSERT INTO ALUNO_CURSO(ALUNO_ID, CURSO_ID) VALUES (3,1);
INSERT INTO ALUNO_CURSO(ALUNO_ID, CURSO_ID) VALUES (1,3);

SELECT * FROM ALUNO_cURSO

DELETE  FROM ALUNO WHERE ID = 1

SELECT * FROM ALUNO;


-- UPDATE CASCADE -- PADRÃO DE TABELA É VIR COM RESTRICT, NESSE CASO, ALTERANDO PARA CASCADE, AS ALTERAÇÕES OCORREM EM TODOS OS DADOS

UPDATE ALUNO
SET ID = 10
WHERE ID = 2;

CREATE TABLE ALUNO_CURSO(
	ALUNO_ID INTEGER,
	CURSO_ID INTEGER,
	PRIMARY KEY (ALUNO_ID, CURSO_ID),
	FOREIGN KEY (ALUNO_ID)
	REFERENCES ALUNO (ID)
	-- ON DELETE RESTRICT - PADRÃO DE CADASTRO DE UMA TABELA
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	
	FOREIGN KEY (CURSO_ID)
	REFERENCES CURSOS (ID)
);


